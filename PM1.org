* Introduction

** Document Purpose
** Product Scope
** Intended Audience and Document Overview
** Definitions, Acronyms and Abbreviations
** Document Conventions
** References and Acknowledgments

* Overall Description

** Product Perspective
** Product Functionality
** Users and Characteristics
- The primary intended user of ProjectKi is an engineer, drafter, technician, or
  any other member of a small technical team managing the parts and pieces of an
  engineering project.
- Most likely, these primary users would include mechanical, electrical, process
  control and project engineers and their managers.
- From the software's perspective, there is only one user-type, as there are no
  functions of the software that need to be different from one user to the next.
- In practice, different users may be responsible for different tasks in using
  the software.
  - For example, a management or accounting person may have the responsibility
    of populating the vendor and supplier database tables, an electrical drafter
    may then generate a Bill of Materials for their current project, and then a
    purchasing manager may generate and distribute the Purchase Orders.
- The tool is generally used to generate business and logistics documents, so the
  secondary user is the recipient of the generated documentation.
- The recipients of Bills of Materials are intended to include:
  - Engineers and drafters responsible for reviewing the final parts lists
    against project drawings.
  - Project managers responsible for approving expenditures.
  - Shipping and receiving staff to check-list project shelving.
- The recipients of the Purchase Orders are expected to be:
  - Internal purchasing agents and departments.
  - External suppliers/vendors.
** Operating Environment
- ProjectKi is intended to reside within a small internal company network as a
  tool which is quickly accessible to employees onsite in the same subnet.
- Much of the engineering and manufacturing world is dominated by Microsoft, so
  it is most likely that this tool would be hosted on a network attached Windows box:
  - The operating system should be Microsoft Server 2003 or higher.
  - At least Dual Core 3.6 MHz CPU.
  - At least 1 gigabyte of storage.
    - Microsoft Access is limited to a 1 gigabyte database size and ProjectKi is a
      potential Access alternative, so requires a 1 gigabyte minimum to match.
  - Local installation of Microsoft SQL Server
** Design and Implementation Constraints
*** Security
- Once populated, the ProjectKi database will likely contain sensitive business
  information, ranging from privately negotiated vendor prices to engineering
  designs protected by Non-Disclosure Agreements.
- For the purposes of demo, ProjectKi will be hosted on a public domain website,
  but end-user installation of the software is expected to be restricted to an
  existing local subnet whose security is already maintained by an administrator
  and hidden behind firewall.
- The software itself does not provide additional security measures.
*** Speed
- ProjectKi would ideally be a drop-in replacement for similar custom Microsoft
  Access applications, and because Access is just a local application and
  database, it feels very snappy relative to internet webpages.
- Local hosting of the ProjectKi database server will allow for fast interaction.
*** Lean Design
- ProjectKi consists of only a handful of pages, but each page should have links
  to every other page, and those links should be supplemented with a paired
  shortcut key.
*** Printable Deliverables
- Generated PO's and BOM's must format to print nicely on 8.5" by 11" standard
  printer paper as well as 11" by 17" drawing paper.
** User Documentation
- The user documentation for ProjectKi consists of three parts:
  - The primary documentation will be the landing page of the website, which
    will have an embedded mini-guide on how to use the system.
  - The secondary documentation will be tooltips populated for every pushbutton
    and static page element.
  - The third and most detailed documentation will be the software user manual.
    This manual will provide screenshots of each page and an enumerated
    description pointing to each element on that page. The manual will also
    detail the valid values for each user entry and a description for each
    system error that can occur.
** Assumptions and Dependencies

* Specific Requirements

** External Interface Requirements
** User Interfaces
** Hardware Interfaces
** Software Interfaces
** Communications Interfaces
** Functional Requirements
** Behavior Requirements
*** Use Case View

* Other Non-Functional Requirements

** Performance Requirements
** Safety And Security Requirements
** Software Quality Attributes

* Appendix A - Data Dictionary

* Appendix B - Group Log

* Optional Other Requirements

